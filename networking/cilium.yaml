---
# Source: cilium/templates/cilium-agent-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-client-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMekNDQWhlZ0F3SUJBZ0lRYUFWa1hBRWVpclYyanJpSXVjT2dyVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl3TVRJeE1qSXpNalV4TTFvWApEVEl6TVRJeE1qSXpNalV4TTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNHQW5oNlJ5bzkyU002TzAKNEZiTlplQ3VJczQ0UU13M1VpT1J4bStzd093U2kxYVl0S2UvQ0tEZ09kTXNZMHdGQUcybXI2VVlabjhqTU5YdwpNNzJjV08zOWVjdVpTTUJjeXhLUWZNNFErRjcyY0phby9FVVFFb3dOL1lCeDNnZ0drVXc4UWRJbi9obHplZmowCkJleGxpbVRONXE1NDUyL05MRTNobGpMWjZGRTlSSDRleEdFRGRCMXN2ekE2TTA1SUFqL25oNXYwdWMyK0hNUTQKYng4VTA0a3ZKcUwzVTV2UHlzWmtvb1k0VlZud0JINnc4NnpsRzB0UDF2VEpXOExZbTBMN2c3WVpBUGFSNEpKaAo1dkdtNUEvUnBLVWo1bGhoVVI2em9GSkowclVpNGNmeGR5MFAxZ01rZUY2U05RZ1JiT21IaVdzd3oyMGNINUVWCm9uNzdOUUlEQVFBQm8yUXdZakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SXdZRFZSMFJCQnd3R29JWUtpNW9kV0ppYkdVdApjbVZzWVhrdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkZoc2xpMDJZYVpSRm1LYUVqClp1M1c0dXUrZTkyUUM1enN5eTNuaTkvaEpFKzQ3RGRpZ09jR3BvZmxibEdFVFhJQmxsVk9MZDc4TmxCT1hwdS8KNmpQMVJ4bjFqaGNyT1RNN3k4d21DWU96L0M0bXg1UjMxTzU2eVB0ZXJZY1VveXlxdGhrVEVLeUVGcUVMVXBobApqNm1aYlNhNHorVXJ5YlZGVVpTaU9mcXJtMlFzcHRpMXljdFkrbU5OcFhnbWFtR1JSaTdoZEM4eFdrYnV6MWJRCjcwZ0NuTlVpREdhV0o1TWg0V25Icjc5ejFDZkQ0V0ZNZHRtN3V4SDllSnZ3dFo4R1U1OEh1TGZEeGRvT1RCV2sKYnFPNzBrMFlEUFFnanpneFI5ZG5rem43MmpoOTNROEpBQVJtVW9kYjZYRmpCOU92RVhYODdwMmZwOG1kTGgwdAp6a1M1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc0dBbmg2UnlvOTJTTTZPMDRGYk5aZUN1SXM0NFFNdzNVaU9SeG0rc3dPd1NpMWFZCnRLZS9DS0RnT2RNc1kwd0ZBRzJtcjZVWVpuOGpNTlh3TTcyY1dPMzllY3VaU01CY3l4S1FmTTRRK0Y3MmNKYW8KL0VVUUVvd04vWUJ4M2dnR2tVdzhRZEluL2hsemVmajBCZXhsaW1UTjVxNTQ1Mi9OTEUzaGxqTFo2RkU5Ukg0ZQp4R0VEZEIxc3Z6QTZNMDVJQWovbmg1djB1YzIrSE1RNGJ4OFUwNGt2SnFMM1U1dlB5c1prb29ZNFZWbndCSDZ3Cjg2emxHMHRQMXZUSlc4TFltMEw3ZzdZWkFQYVI0SkpoNXZHbTVBL1JwS1VqNWxoaFVSNnpvRkpKMHJVaTRjZngKZHkwUDFnTWtlRjZTTlFnUmJPbUhpV3N3ejIwY0g1RVZvbjc3TlFJREFRQUJBb0lCQUVqd0dxalBhdEUxS2ViTgpCbG5YeTYwYjB5ZDFuSEcvZ2drbnlIc0ZaNjJJY3NySWp2SDJoTnV1bTh1TjlzZEJncmdBb0hQMmxEYWUwUkM3CkNGQjlVeEM3cXAwWmcxUkFxSjhhR0VKa2ZVUVpFVlRTR1NQcDg1R1g5WmtsNnZEazVNSmxnbTI5Mk9nTjRtRkkKZ0xHS1p4dHFRSFBySnZpZWxYeUM0STFhamg2eCtleWYrTVM1N2JlZ0NjNWpMZm9aSGZGd3hYV1c3ZVdSUU1BdAo0RGxQOG1DaUpCOEVrOUVxQWUzQnFKQjlGR3BycjlkRW9LSTB6a0pvbTY3cm5WT1M2OStCd21DNmNVZHR0ckRRClk5TlFQclRIV3BMaGFhd3lBbWRzdkRUS2lMMUU3U3QyZW1MTTRIVlZhdnorWlhJNWJKa0JyaUNoVEhXN3RucnEKMUFlUTc2a0NnWUVBM3l1V2UvREgycUhGdEhydUwzdmE5SWtjS245cUpScG0rcXJCTXp6aitYaVcvSTNjY0tZVQpJTkdCOGtBYXBOdUdVWW9nSlRmbWxTMjR4ZzhlZDBET056VTZRWkJZZ0VGcE1kN2podTVDbVhtR2VNK0JmWkJqCnlNTllZczFQYmUyRHhxQUc1NnRTTnJyQ1FDZmY1K3VpelExTWh4V0YyQUZLeklOR3owUnJ1TDhDZ1lFQXlsSlIKUHV2VVlXTW1KMU9JTHRORWVYcFNzY1RxL2NVbnBNVlJYQ1Nid2xuNlM0WFNGSEZjcURHZitUczBZcHVwRjNOawoxbkVlMEovK3poaloyZU1JdklFRHh5SGpTdHdETTJZR1pKbDRNT2RmSVdJdkhKblJLeU9YMkl2RGs1bFlvY0ZlCnZ5bVZRaWtlLzA1L2d0cWxFenQ5YkZiMW1pM2sxZkZUNXBDQnRRc0NnWUE0WWx6YzU1SzI3RlIxS3ZIdTBVNGEKcG1HVll5ZkFSQkZzbDZQRWZFZmxDZENyOG5PVmlvQmZZaytBa3kyb0pVYWtaMCtEMThITVF3Y0NFMlBSSVhCNApobHczb0c2YnlPcjVES1ZUdS9MYnI5YUh3M1dsOGNza09DYW1uOVRIbzFDOTZFU1dWN1NuMnp1azFlNCtQRXlmCm5oS050cVJnVk1NL05KTzVYa0lSSlFLQmdRQ2p0RitRN2ZqMm8rY25RdXVhRjgvOEN3SUdYVE5YQ3NPOUN2dDkKOXhFZy9QVU5Uc1poVENpUTN6WjF6M1hmbzl2NTRhRGg4cjNnU05VL3BkUC8vVGdBYnRQRHVLUFUycGlzYWcwYQpNU09UVG1NbSsrN3EwWHJ4ME9iNGpINC9XNERmd1RzTXFuVGZCNjdSSFk4SExpc0xtTU12ZWwxWDEzS2x1Wk1OCnFEZUxhUUtCZ0I3Z1JFenl2NS9qRFlZY2tqaVFLYVgxMlo3dGtvNkdWdXZOZ1dZWEswYlBhckY0a3QxSTVvWlEKWkt2Nkg1UXJOOHBCY29vQ3Y0czlyaUFiOVdvOFdBNnVRbGVFcGtUejRrakdJNS9NVVVDdHdOVktMUUlsQ0ZmVApHREhpWXYrS3N3cHZ2aEZ2aHdhRjNnalNCTEhIL2Z1L2pXd29yNXpJdlJaOGdaMi8xVkFJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble-server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQakNDQWlhZ0F3SUJBZ0lSQU8yaWVLV242VXpsNkxYSDZjaU1GMzR3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TURFeU1USXlNekkxTVROYQpGdzB5TXpFeU1USXlNekkxTVROYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEeDdxNUUKNjRzVlp5QysvT0EvTHE3elBabzhQTWhxZVhmTW5MUzVjY3p6emdqWVFhNGFobVQxZUpNc1IzNk1CaVdEdk5rUApaNXVUamxEK0hlSkQ4WWw1OGZYendyTHFwcXpMU3JWZlpjV3kvN1EwOXBmT0FGRnhSQyt6aHlyN1NkSGxIMDhuCkk1ZnY0bEwwMW1LTWg5OEZRVHVYckpaRjdnK3dMTDBndVhsR2t1T3gyTUZoTkRhYlVndUVqRFRSQURXN3lCcUMKMGlVOXJKQkNXN2NxeVcrYnczOThoaGYyUGViTFdUS3NHV1VwQmNzSFBFQnhRRmVOTHBER0JabG9mb2VXdHMvYQplSS9jSHMvSE0xbU5QcnB0K0dIOHhib1lxV1Vhdzl4SFRBUGlCRmRWamFXalhMcWNMY0dpU3VFY1NVYURFNUtSCm45dm81Z2VVS0x2SDZXYUpBZ01CQUFHamF6QnBNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVUKQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFxQmdOVkhSRUVJekFoZ2g4cQpMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCCkFRQkp1VDl3dkJselZEZU9GaElYdmUreXhUeTZqZURqUUJaaERMUlhmYWlUQVVpaUpGYm1HdWhNWjc2NHZEZGcKdE1pbUNKZFh2b3ZhQXRmcWxVZTRkdGpGWmc2T2pzRkErRmtHb2hDZVVheGQ0UkhWUGVOWUU0eHJTZGdrWVBoWgpHMFR3c3U2dis0OFZoMmV4QXhJeFdmMjZDSTExRGdjdnMxSjNWaU9GaisvVDNHVXZLY2tvZUJsUDY5cW4wVmhUCkxqZDFMNi9OOUYrSlpRZUdQQkRXNFJFUDNpdWROb0tYdlZVU3FhdkovNmJiTEdKanFsU2hDbTcvNTE3V0E4TnAKaWsrU1dETy9pY09rNVlSSTc0R1RXZDRkd0RDYmk5Snc4UVJCL3B1bXdoV3FqS1k3SzBLWkhtb0dtUjV2V3FBZgpsZFhUZFQ2cjZYZkltRmhldzM0Rmp4dkMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBOGU2dVJPdUxGV2NndnZ6Z1B5NnU4ejJhUER6SWFubDN6SnkwdVhITTg4NEkyRUd1CkdvWms5WGlUTEVkK2pBWWxnN3paRDJlYms0NVEvaDNpUS9HSmVmSDE4OEt5NnFhc3kwcTFYMlhGc3YrME5QYVgKemdCUmNVUXZzNGNxKzBuUjVSOVBKeU9YNytKUzlOWmlqSWZmQlVFN2w2eVdSZTRQc0N5OUlMbDVScExqc2RqQgpZVFEybTFJTGhJdzAwUUExdThnYWd0SWxQYXlRUWx1M0tzbHZtOE4vZklZWDlqM215MWt5ckJsbEtRWExCenhBCmNVQlhqUzZReGdXWmFINkhscmJQMm5pUDNCN1B4ek5aalQ2NmJmaGgvTVc2R0tsbEdzUGNSMHdENGdSWFZZMmwKbzF5Nm5DM0Jva3JoSEVsR2d4T1NrWi9iNk9ZSGxDaTd4K2xtaVFJREFRQUJBb0lCQUQzM1ZtZU10UmtNU3hUZwpERWZpbXlqdU5GME5iSC9wRU1nMXN3eDBtM3d1MzVFVWNaV1Zxckk4NmVWRGdxUTJ4dEVSUTc5d1dDYlpJdUdUCm9lcXBLUDgwL0R3dE9FcGwyb2hQWUZsSTVmUk5Ea2txaUFOWmpZS25abGhqWEp6MGNYQndMb1BsMS9xM1Myd3UKcFJzOWlkLzhyMWpQK2NWN2prVWZrR21iVi9hOUZWdk5CdzlzTWJLS0dKU0d4WGozT2hIWGcrZHdUV2JhNHZOaQpRQUNCRUw2QlI5aWFRVnE2ZTJZR2dvRy94Nnk5WVQrTnlZUFBvYlE5aVRkWnlCUVZVcWVhYmlWVjdHS2E1NFZ3CjNQZk80YXowbDZENmx4UEEyQ2I0THh6d25nWHlqbkNtK2tTcTBqcWRucUxWWXBERVpENklMOUczejdwWUF3YzQKU2JFcFlXa0NnWUVBK2x1bTQySDVsVW9XQUVQaVppTlJXV1lBTzd5dE5yblR4Y1ZxQ0pEazRheDdGZURJekxiZQo3V1EzUTlGUG5EcXNYenRFbUFHUlRMK1RRZjh6YlVGMHRwRTkwZlJiSVhqczlFN2JFQzM5eUV5ZmlXL1E2ZU1mCk9lQ1oxWWVtRmdWL25sYzhydHZSaXBQSTFScUdFYlFrekI5TXRzNmUrU2NMblF5ektPN3NnL2NDZ1lFQTkySnIKaUZkemQ5THVONTk0NGYxdklJVTNraXQvZW1pRFZCT2lXMUg3OWV2Vjl4T2I5TkpNdTNvVFVJd2V4V3BhVGttVwpkcW5zb2VFcmQzUEh4N1ozVGxhZThJcngwWExhV0tTNEJtRmNVRXFNOXRoaUtTV0hEeU5ZQllMc2J5WXJ4aWJVCnp2TWs5b3U4aVRYUGhvRnh1U1hoNkhPc3BoWlE3S2trdXY4QnlYOENnWUF5aWpvQWdSRFBVR3RzbGtlbjhzMUQKVE5JVFBSMkNoTFQ1b2Nhc0FBUVVncXMrV1dodjJ5TFpyWGR5bTFpRTQxdFV4alFzczNSUG1BVDBONzU3K2RERAo0a0ltbGp1bllEQUZpYjJ6WUhWdzcvYnMyY1BFMDNMRVRsRC95Q2lCSFk4THVmU29IL3dIQzVwcFdyZGg3NG5XCkl5TnJhLzZ2c1hBb3ZoMlV6OWF6TlFLQmdBMmJuMWlubnRWbmgrME5XNlBxd2ZNakFOU01pZjJjeENTYTArSjgKRndVSERRVURVaC9jZFpZV2QvdUZTYWdJV3FGVjBPNEVHTjBxdXE1ZWN3M2NUcUhEaUFpcFMvWCtnRjVCNlZHSQpoNEJ2S1dQbXNUZWNOZHF5VWdRem1IZmd2S1d3dXlJTEkreGY4V1lHekx5VVlFSVVBR0krQXJBOEtBVnNwSFdZCjAydFhBb0dBRzNiaGRHTXUySHdZMVpRaHFJRE12RGd4RVhNdkNwMkY1VWFpVUVWSjJScjgrMGZQM29DQVMxRUMKZHV1ODdYYjEyUk5Xa2VuczZzenB4K1h3SE1qT1hWdzRDNCtFSnZaTmVFQUdWaWRVaG1vM2E3OWhzcFFiQWJlYwp2aEtVZUppK0ZORmJlQ3c0dnZvMVJ6SHFmS0VpVUszOElVRkMyWUFpMmtuUGttV0pzdkE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  disable-envoy-version-check: "true"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in a kvstore, etcd or consul, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9090"
  # Port to expose Envoy metrics (e.g. "9095"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9095"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":6942"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  # wait-bpf-mount makes init container wait until bpf filesystem is mounted
  wait-bpf-mount: "false"

  masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"

  auto-direct-node-routes: "true"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"
  kube-proxy-replacement:  "probe"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-host-reachable-services: "true"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  node-port-mode: "dsr"
  bpf-lb-algorithm: "maglev"
  enable-session-affinity: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9091"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.42.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
---
# Source: cilium/templates/hubble-ca-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ca-cert
  namespace: kube-system
data:
  ca.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIDCDCCAfCgAwIBAgIQKOHf7t7MujjrhGomgAXKMzANBgkqhkiG9w0BAQsFADAe
    MRwwGgYDVQQDExNodWJibGUtY2EuY2lsaXVtLmlvMB4XDTIwMTIxMjIzMjUxM1oX
    DTIzMTIxMjIzMjUxM1owHjEcMBoGA1UEAxMTaHViYmxlLWNhLmNpbGl1bS5pbzCC
    ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOAGzS/WNja660FyuzZJaaHV
    z7NByb9oGm7Mgn4sTc+hNL/rJrzQX9Jm6PZdWM2QBTKXmxmq5WLR+KyKUosRVtcg
    yEcIRNbR4moQX0wU0us0Ife/inDmrVOzAv53XONyL7E0YcWkClXrcB5X8fItsUd6
    DpRf2hQNoMtRzgGsBc4M1/zTHDKrsB6V9SlQTlHYbyKWEkx62WeciD3PlgfavRZu
    fS051OD2EjGmUiHmmyS1yCD888AX+srtcmBqq5mFdAP0kg5rQxtqPeDuOCTjZhG7
    fgJ0yVkdvUWjlK+KmwpXxkdIY3LsBM3SAG3SuxkWTsaI4XTlcAKAScCRrKCg+skC
    AwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggr
    BgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQBhjm2n
    PClFYY94zUbJllFUazzpAMwFLGtPhD+0creicwcB3/qROLnI+Wt96fwhS7I5DhJH
    uT53CmZNmsb6pG2jc0JTNsiZ4K/+a6ETXGqFJMgnwzTmY226A0yEWs1730+kUtS/
    MfPa7qZ5+rx3DIm/cmi0HnZ2kKAZ2NhAfcAn3CIeBjcKdZ63rCqJI0MWaxJ48Gx4
    JihM89gcWdOvrxEvJHVGq679YFBIArPGbEYRrHcIEcg+tjnB8P8xU8lHFhbOaWqy
    fIl6dW48BNMrSm7WEAqfjPRv+kFZPoaOWvS5u/oRpvcNddyARdak9/w+EWwcCQ8H
    l/Toa0T2UcGA+KL4
    -----END CERTIFICATE-----
---
# Source: cilium/templates/hubble-relay-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  config:
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ['*']
                          routes:
                            - match:
                                prefix: '/api/'
                              route:
                                cluster: backend
                                max_grpc_timeout: 0s
                                prefix_rewrite: '/'
                            - match:
                                prefix: '/'
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: '*'
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: '1728000'
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          hosts:
            - socket_address:
                address: 127.0.0.1
                port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          hosts:
            - socket_address:
                address: 127.0.0.1
                port_value: 8090
---
# Source: cilium/templates/cilium-agent-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between mulitple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
# The support for leases was introduced in coordination.k8s.io/v1 during Kubernetes 1.14 release.
# In Cilium we currently don't support HA mode for K8s version < 1.14. This condition make sure
# that we only authorize access to leases resources in supported K8s versions.
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-relay-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-relay
rules:
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/hubble-ui-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-relay
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-relay
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: hubble-relay
---
# Source: cilium/templates/hubble-ui-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: hubble-ui
---
# Source: cilium/templates/cilium-agent-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: "9095"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: envoy-metrics
    port: 9095
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/cilium-agent-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-metrics
  namespace: kube-system
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: "9091"
  labels:
    k8s-app: hubble
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9091
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble-relay-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: cilium/templates/cilium-agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 10
          # The initial delay for the liveness probe is intentionally large to
          # avoid an endless kill & restart cycle if in the event that the initial
          # bootstrapping takes longer than expected.
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_FLANNEL_MASTER_DEVICE
          valueFrom:
            configMapKeyRef:
              key: flannel-master-device
              name: cilium-config
              optional: true
        - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
          valueFrom:
            configMapKeyRef:
              key: flannel-uninstall-on-exit
              name: cilium-config
              optional: true
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: docker.io/cilium/cilium-dev:v1.9.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        name: cilium-agent
        ports:
        - containerPort: 9090
          hostPort: 9090
          name: prometheus
          protocol: TCP
        - containerPort: 9095
          hostPort: 9095
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9091
          hostPort: 9091
          name: hubble-metrics
          protocol: TCP
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
          # Needed to be able to load kernel modules
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: CILIUM_WAIT_BPF_MOUNT
          valueFrom:
            configMapKeyRef:
              key: wait-bpf-mount
              name: cilium-config
              optional: true
        image: docker.io/cilium/cilium-dev:v1.9.0
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
          mountPropagation: HostToContainer
        - mountPath: /var/run/cilium
          name: cilium-run
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
        # To keep state between restarts / upgrades for bpf maps
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      # To install cilium cni plugin in the host
      - hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
        # To install cilium cni configuration in the host
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
        # To be able to load kernel modules
      - hostPath:
          path: /lib/modules
        name: lib-modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          sources:
          - secret:
              name: hubble-server-certs
              items:
                - key: tls.crt
                  path: server.crt
                - key: tls.key
                  path: server.key
              optional: true
          - configMap:
              name: hubble-ca-cert
              items:
                - key: ca.crt
                  path: client-ca.crt
              optional: true
---
# Source: cilium/templates/cilium-operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  # We support HA mode only for Kubernetes version > 1.14
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "6942"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: cilium/operator-dev:v1.9.0
        imagePullPolicy: IfNotPresent
        name: cilium-operator
        ports:
        - containerPort: 6942
          hostPort: 6942
          name: prometheus
          protocol: TCP
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
# Source: cilium/templates/hubble-relay-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  labels:
    k8s-app: hubble-relay
  namespace: kube-system
spec:

  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: docker.io/cilium/hubble-relay-dev:v1.9.0
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - mountPath: /var/run/cilium
            name: hubble-sock-dir
            readOnly: true
          - mountPath: /etc/hubble-relay
            name: config
            readOnly: true
          - mountPath: /var/lib/hubble-relay/tls
            name: tls
            readOnly: true
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - projected:
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
          - configMap:
              name: hubble-ca-cert
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
        name: tls
---
# Source: cilium/templates/hubble-ui-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      containers:
        - name: frontend
          image: "docker.io/mcfio/hubble-ui-dev:v0.7.3"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          resources:
            {}
        - name: backend
          image: "docker.io/mcfio/hubble-ui-backend-dev:v0.7.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - containerPort: 8090
              name: grpc
          resources:
            {}
        - name: proxy
          image: "docker.io/envoyproxy/envoy:v1.16.1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: http
          resources:
            {}
          command: ["envoy"]
          args:
            [
              "-c",
              "/etc/envoy.yaml",
              "-l",
              "info"
            ]
          volumeMounts:
            - name: hubble-ui-envoy-yaml
              mountPath: /etc/envoy.yaml
              subPath: envoy.yaml
      volumes:
        - name: hubble-ui-envoy-yaml
          configMap:
            name: hubble-ui-envoy
